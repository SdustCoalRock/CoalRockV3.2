unit UnF_CDFz;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, ImgList, ComCtrls, ToolWin, ExtCtrls,math, ExtDlgs, System.ImageList,
  Vcl.Menus, Main_PStope;

type
  TUFormCdmn = class(TForm)
    ImageList1: TImageList;
    StatusBar1: TStatusBar;
    Timer1: TTimer;
    Image_DCFZ: TImage;
    Image_lx: TImage;
    SavePictureDialog1: TSavePictureDialog;
    CoolBar1: TCoolBar;
    ToolBar1: TToolBar;
    TB_StepToStep: TToolButton;
    TB_Back: TToolButton;
    TB_AutoStep: TToolButton;
    TB_ToLeftMove: TToolButton;
    TB_ToRightMove: TToolButton;
    TB_ToFront: TToolButton;
    TB_ZoomOut: TToolButton;
    TB_ZoomIN: TToolButton;
    TB_RecZoom: TToolButton;
    TB_imm_FirstStep: TToolButton;
    TB_Imm_SecondStep: TToolButton;
    TB_Old_FirstStep: TToolButton;
    TB_Old_SecondStep: TToolButton;
    TB_ToLO: TToolButton;
    TB_SaveBMP: TToolButton;
    TB_Tuli_1: TToolButton;
    TB_NQ_step: TToolButton;
    TB_Disp_ZCYL: TToolButton;
    TB_Set_Parm: TToolButton;
    TB_Close: TToolButton;
    ToolButton1: TToolButton;
    DispPopMemu: TPopupMenu;
    Pop_disptool: TMenuItem;
    N1: TMenuItem;
    Pop_Save: TMenuItem;
    Pop_Exit: TMenuItem;
    N2: TMenuItem;
    Pop_paramete: TMenuItem;
    Pop_DispStress: TMenuItem;
    N5: TMenuItem;
    Pop_NaoQu: TMenuItem;
    Pop_tuli: TMenuItem;
    N8: TMenuItem;
    Pop_Fist_imm: TMenuItem;
    Pop_Second_imm: TMenuItem;
    Pop_first_old: TMenuItem;
    Pop_Second_old: TMenuItem;
    Pop_Move_L0: TMenuItem;
    N15: TMenuItem;
    Pop_ZoomMin: TMenuItem;
    Pop_ZoomMAX: TMenuItem;
    Pop_ReCallZoom: TMenuItem;
    N19: TMenuItem;
    Pop_StartOn: TMenuItem;
    Pop_BackStep: TMenuItem;
    Pop_OneStep: TMenuItem;
    Pop_AutoStep: TMenuItem;
    N24: TMenuItem;
    Pop_MoveLeft: TMenuItem;
    Pop_MoveRight: TMenuItem;
    procedure FormCreate(Sender: TObject);
    procedure TB_StepToStepClick(Sender: TObject);
    procedure TB_Tuli_1Click(Sender: TObject);
    procedure TB_NQ_stepClick(Sender: TObject);
    procedure FormResize(Sender: TObject);
    procedure TB_ZoomOutClick(Sender: TObject);
    procedure TB_ZoomINClick(Sender: TObject);
    procedure TB_ToLeftMoveClick(Sender: TObject);
    procedure TB_ToRightMoveClick(Sender: TObject);
    procedure TB_RecZoomClick(Sender: TObject);
    procedure TB_BackClick(Sender: TObject);
    procedure TB_Set_ParmClick(Sender: TObject);
    procedure TB_AutoStepClick(Sender: TObject);
    procedure Timer1Timer(Sender: TObject);
    procedure TB_SaveBMPClick(Sender: TObject);
    procedure TB_imm_FirstStepClick(Sender: TObject);
    procedure TB_Imm_SecondStepClick(Sender: TObject);
    procedure TB_Old_FirstStepClick(Sender: TObject);
    procedure TB_Old_SecondStepClick(Sender: TObject);
    procedure TB_ToLOClick(Sender: TObject);
    procedure TB_ToFrontClick(Sender: TObject);
    procedure TB_Disp_ZCYLClick(Sender: TObject);
    procedure FormCloseQuery(Sender: TObject; var CanClose: Boolean);
    procedure TB_CloseClick(Sender: TObject);
    procedure ToolButton1Click(Sender: TObject);
    procedure Pop_ExitClick(Sender: TObject);
    procedure N2Click(Sender: TObject);
    procedure Pop_parameteClick(Sender: TObject);
    procedure Pop_DispStressClick(Sender: TObject);
    procedure Pop_NaoQuClick(Sender: TObject);
    procedure Pop_tuliClick(Sender: TObject);
    procedure Pop_Move_L0Click(Sender: TObject);
    procedure Pop_Second_oldClick(Sender: TObject);
    procedure Pop_first_oldClick(Sender: TObject);
    procedure Pop_Second_immClick(Sender: TObject);
    procedure Pop_Fist_immClick(Sender: TObject);
    procedure Pop_ReCallZoomClick(Sender: TObject);
    procedure Pop_ZoomMAXClick(Sender: TObject);
    procedure Pop_ZoomMinClick(Sender: TObject);
    procedure Pop_MoveRightClick(Sender: TObject);
    procedure Pop_MoveLeftClick(Sender: TObject);
    procedure Pop_AutoStepClick(Sender: TObject);
    procedure Pop_OneStepClick(Sender: TObject);
    procedure Pop_BackStepClick(Sender: TObject);
    procedure Pop_StartOnClick(Sender: TObject);
    procedure Pop_disptoolClick(Sender: TObject);
    procedure Image_DCFZMouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure Image_DCFZEndDrag(Sender, Target: TObject; X, Y: Integer);
  private
    { Private declarations }
     ShowScreen:integer;
     DragStartPoint:Tpoint;
     procedure SetButtonEnabled(Value:Boolean);
  public
    { Public declarations }
    Leiji_Jinchi,X_move_Pix,Step_x:double;// 累计进尺、X 移动距离 ,模拟步长
    Tu_li:integer;// 图例
    NQ_step:string;// 挠曲与 步距
    Zoom_max,Zoom_min,Step_start,Step_end:double; //放大倍数， 缩小倍数， 开始进尺，终止进尺
    pause_Step:bool;
    Model_start_Yc,Model_l:integer; // 模拟开始的岩层  Model_l 为 选择项目0 为 从0 开始     1 为缓沉带的下部   2 为老顶1-2 个岩梁
    hcd_bl: double; //缓沉带的显示比例
    disp_two_tu,disp_ylg:integer;//  disp_two_tu  显示图片 显示两幅图  0 只显示 推进方向， 1 显示 推进方向与倾斜方向
                                //@disp_ylg:integer;    是否显示支撑压力拱  0 不显示 1 显示
    function Draw_Fyyd_DTFZ_new:Boolean;
    procedure SetDtFzJinJinChi(Value:double);
    procedure DispDTFZPop(Px,Py:Integer);//显示GraphChart 控制的工具栏
    procedure SetFromWidthAndHeigth(flag:integer);

  end;

   function ShowDtFz_inn(AHandle:THandle;ACaption:string;Width,Heigth,Flag:integer):integer;stdcall;
   procedure Set_mnkc_tu_inn(AHandle:THandle);

   var
     FormCdmn_inn: TUFormCdmn;

implementation

uses   ChecKInputForm, Lu_Public_BasicModual;

{$R *.dfm}
//
procedure Set_mnkc_tu_inn(AHandle:THandle);
begin
     if Assigned(FormCdmn_inn) then
        FreeAndNil(FormCdmn_inn);

        FormCdmn_inn:=TUFormCdmn.Create(nil);
     try

              FormCdmn_inn.WindowState:= wsNormal;
              FormCdmn_inn.ParentWindow:=Ahandle;

              FormCdmn_inn.Leiji_Jinchi:=4;
              FormCdmn_inn.TB_StepToStep.Click ;
              if Public_Basic.Licensing  then  Public_Basic.AddSingleTextWaterFormImage(FormCdmn_inn.Image_DCFZ)
                 else Public_Basic.AddMultTextWaterFormImage(FormCdmn_inn.Image_DCFZ);
              FormCdmn_inn.Image_DCFZ.Picture.SaveToFile(public_Basic.Get_MyModulePath +'SaveBmp\FYYD\IMM0.JPG');

              FormCdmn_inn.TB_imm_FirstStep.Click ;
                if Public_Basic.Licensing  then  Public_Basic.AddSingleTextWaterFormImage(FormCdmn_inn.Image_DCFZ)
                 else Public_Basic.AddMultTextWaterFormImage(FormCdmn_inn.Image_DCFZ);
              FormCdmn_inn.Image_DCFZ.Picture.SaveToFile(public_Basic.Get_MyModulePath +'SaveBmp\FYYD\IMM1.JPG');

              FormCdmn_inn.TB_imm_SecondStep.Click ;
               if Public_Basic.Licensing  then  Public_Basic.AddSingleTextWaterFormImage(FormCdmn_inn.Image_DCFZ)
                 else Public_Basic.AddMultTextWaterFormImage(FormCdmn_inn.Image_DCFZ);
              FormCdmn_inn.Image_DCFZ.Picture.SaveToFile(public_Basic.Get_MyModulePath +'SaveBmp\FYYD\IMM2.JPG');

              FormCdmn_inn.TB_old_FirstStep.Click ;
               if Public_Basic.Licensing  then  Public_Basic.AddSingleTextWaterFormImage(FormCdmn_inn.Image_DCFZ)
                 else Public_Basic.AddMultTextWaterFormImage(FormCdmn_inn.Image_DCFZ);
              FormCdmn_inn.Image_DCFZ.Picture.SaveToFile(public_Basic.Get_MyModulePath+'SaveBmp\FYYD\IMM3.JPG');

              FormCdmn_inn.TB_old_SecondStep.Click ;
               if Public_Basic.Licensing  then  Public_Basic.AddSingleTextWaterFormImage(FormCdmn_inn.Image_DCFZ)
                 else Public_Basic.AddMultTextWaterFormImage(FormCdmn_inn.Image_DCFZ);
              FormCdmn_inn.Image_DCFZ.Picture.SaveToFile(public_Basic.Get_MyModulePath +'SaveBmp\FYYD\IMM4.JPG');

              FormCdmn_inn.TB_ToLO.Click ;
                if Public_Basic.Licensing  then  Public_Basic.AddSingleTextWaterFormImage(FormCdmn_inn.Image_DCFZ)
                 else Public_Basic.AddMultTextWaterFormImage(FormCdmn_inn.Image_DCFZ);
              FormCdmn_inn.Image_DCFZ.Picture.SaveToFile(public_Basic.Get_MyModulePath +'SaveBmp\FYYD\IMM5.JPG');


     finally
         FreeAndNil(FormCdmn_inn);
     end;
end;

  function ShowDtFz_inn(AHandle:THandle;ACaption:string;Width,Heigth,Flag:integer):integer;stdcall;
  begin
        if Assigned(FormCdmn_inn) then
           FreeAndNil(FormCdmn_inn);

        FormCdmn_inn:=TUFormCdmn.Create(nil);
        try
              FormCdmn_inn.Caption:=ACaption;
              FormCdmn_inn.ParentWindow:=Ahandle;
             if Heigth >FormCdmn_inn.Height then
                FormCdmn_inn.Top :=Round((Heigth-FormCdmn_inn.Height)/2)
             else   FormCdmn_inn.Top :=0;

             if Width> FormCdmn_inn.Width then
                FormCdmn_inn.Left:=Round((Width-FormCdmn_inn.Width)/2)
             else  FormCdmn_inn.Left:=0;

             FormCdmn_inn.SetFromWidthAndHeigth(Flag);

              Result:=1;//函数值
        except
             FreeAndNil(FormCdmn_inn);
        end;
 end;
 //============


 //============
procedure TUFormCdmn.DispDTFZPop(Px, Py: Integer);
begin
   DispPopMemu.Popup(px,py);
end;

function TUFormCdmn.Draw_Fyyd_DTFZ_new: Boolean;
{画覆岩运动动态仿真的优化函数}
begin
    {1 设置 画图的 Image }
    ExPstopeClass.Ex_Cal_Show.SetDrawClassDcFZ(Image_DCFZ);//
    {1 设置主要的运动参数
      JinChi:=JChi;     X_pan_move:=X_pan;    Tuxing:=Tu;   disp_two_tu:=disp_two;
     disp_ylg:=ylg;         NQ_step:=NQstep;}
    ExPstopeClass.Ex_Cal_Show.SetDrawClass_canshu(self.Leiji_Jinchi,self.X_move_Pix,self.Tu_li,
                     self.disp_two_tu,self.disp_ylg,self.NQ_step);
    {2\设置主要 类库}
    ExPstopeClass.Ex_Cal_Show.SetDrawZhulei(ExPstopeClass.Ex_Gzm,ExPstopeClass.Ex_zk,
            ExPstopeClass.Ex_ZhiJia,ExPstopeClass.Ex_imm_r,ExPstopeClass.Ex_old);
    {3\ 绘制图片}
    X_move_Pix:=ExPstopeClass.Ex_Cal_Show.DrawFyydDtfz_main;
end;

procedure TUFormCdmn.FormCloseQuery(Sender: TObject; var CanClose: Boolean);
var
   pic_Path:string;
   pt1,pt2:TPoint;
begin
   Pic_Path  :=Public_Basic.Get_MyModulePath+'saveBmp\CoalBMP\OneCoal'+'_1_1.BMP';
   if ShowScreen=1 then begin
      FormCdmn_inn.Image_DCFZ.Picture.SaveToFile(Pic_Path);
   end;
   if Assigned(FormCdmn_inn) then  FreeAndNil(FormCdmn_inn);
end;

procedure TUFormCdmn.FormCreate(Sender: TObject);
begin
    Image_lx.Visible:=false;
    Image_DCFZ.Align:= alClient ;
    Image_DCFZ.Parent.DoubleBuffered :=true;
    { TODO : 未修改 }
    Leiji_Jinchi:=ExPstopeClass.Ex_Gzm.S_Jc_L;  // 累计进尺
    X_move_Pix:=0;   // 累计进尺、X 移动距离
    Step_x:=0.8;;//  ,模拟步长
    Tu_li :=1; // 1  仿真图例   0 简单图例
//    self.ToolButton_tu.Caption :='仿真图例';
    NQ_step:='1'; // 1 挠曲 算法  0 步距算法
//    self.ToolButton_NQ_step.Caption:='挠曲算法';
    self.StatusBar1.Panels[0].Width :=trunc(self.StatusBar1.Width/2);
    Zoom_max:=10;
    Zoom_min:=0.1;
    Step_start:=0;
    Step_End:=ExPstopeClass.Ex_Gzm.S_L_qx*2;
    pause_Step:=true;
    Model_l:=1; // 默认从缓沉带的下部开始显示
    hcd_bl:=0.5; //如果 显示全部，缓沉带的显示比例默认为0.2；
    ExPstopeClass.Ex_Cal_Show.model_l:=Model_l;
    ExPstopeClass.Ex_Cal_Show.hcd_bl:= hcd_bl;
    disp_two_tu:=0;
    disp_ylg:=0;

end;

procedure TUFormCdmn.FormResize(Sender: TObject);
begin
    Draw_Fyyd_DTFZ_new;
end;


procedure TUFormCdmn.Image_DCFZEndDrag(Sender, Target: TObject; X, Y: Integer);
begin
  if X >DragStartPoint.X  then  begin
      X_move_Pix:=X_move_Pix-(X -DragStartPoint.X );
      self.Draw_Fyyd_DTFZ_new;
  end else begin
       X_move_Pix:=X_move_Pix+(DragStartPoint.X- X);
      self.Draw_Fyyd_DTFZ_new;
  end;
end;

procedure TUFormCdmn.Image_DCFZMouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
 var
  pt:Tpoint;
begin
   if Button=mbRight then begin
      pt:= Image_DCFZ.ClientToScreen(Point(0,0));
      DispDTFZPop(pt.X+x,pt.Y +y);
   end else if Button=mbLeft then begin
      DragStartPoint.X:=x;
      DragStartPoint.Y:=Y;
   end;


end;

procedure TUFormCdmn.N2Click(Sender: TObject);
begin
    TB_SaveBMP.Click ;
end;

procedure TUFormCdmn.Pop_AutoStepClick(Sender: TObject);
begin
  TB_AutoStep.Click;
end;

procedure TUFormCdmn.Pop_BackStepClick(Sender: TObject);
begin
   TB_Back.Click ;
end;

procedure TUFormCdmn.Pop_DispStressClick(Sender: TObject);
begin
    TB_Disp_ZCYL.Click ;
end;

procedure TUFormCdmn.Pop_disptoolClick(Sender: TObject);
begin
    CoolBar1.Visible :=not CoolBar1.Visible;
    if CoolBar1.Visible then begin
       Pop_disptool.Caption :='隐藏工具栏';
    end else begin
       Pop_disptool.Caption :='显示工具栏';
    end;

      self.Draw_Fyyd_DTFZ_new;
end;

procedure TUFormCdmn.Pop_ExitClick(Sender: TObject);
begin
     Close;
end;

procedure TUFormCdmn.Pop_first_oldClick(Sender: TObject);
begin
    TB_Old_FirstStep.Click;
end;

procedure TUFormCdmn.Pop_Fist_immClick(Sender: TObject);
begin
   TB_imm_FirstStep.Click;
end;

procedure TUFormCdmn.Pop_MoveLeftClick(Sender: TObject);
begin
  TB_ToLeftMove.Click ;
end;

procedure TUFormCdmn.Pop_MoveRightClick(Sender: TObject);
begin
    TB_ToRightMove.Click;
end;

procedure TUFormCdmn.Pop_Move_L0Click(Sender: TObject);
begin
   TB_ToLO.Click ;
end;

procedure TUFormCdmn.Pop_NaoQuClick(Sender: TObject);
begin
   TB_NQ_step.Click ;
end;

procedure TUFormCdmn.Pop_OneStepClick(Sender: TObject);
begin
   TB_StepToStep.Click;
end;

procedure TUFormCdmn.Pop_parameteClick(Sender: TObject);
begin
   TB_Set_Parm.Click ;
end;

procedure TUFormCdmn.Pop_ReCallZoomClick(Sender: TObject);
begin
  TB_RecZoom.Click ;
end;

procedure TUFormCdmn.Pop_Second_immClick(Sender: TObject);
begin
  TB_Imm_SecondStep.Click;
end;

procedure TUFormCdmn.Pop_Second_oldClick(Sender: TObject);
begin
   TB_Old_SecondStep.Click;
end;

procedure TUFormCdmn.Pop_StartOnClick(Sender: TObject);
begin
  ToolButton1.Click ;
end;

procedure TUFormCdmn.Pop_tuliClick(Sender: TObject);
begin
  TB_Tuli_1.Click;
end;

procedure TUFormCdmn.Pop_ZoomMAXClick(Sender: TObject);
begin
  TB_ZoomOut.Click;
end;

procedure TUFormCdmn.Pop_ZoomMinClick(Sender: TObject);
begin
    TB_ZoomIN.Click;
end;

procedure TUFormCdmn.SetButtonEnabled(Value: Boolean);
begin
    //TB_Pause.Enabled :=Value;
    TB_StepToStep.Enabled :=Value;
    TB_Back.Enabled :=Value;
    //TB_AutoStep.Enabled :=Value;
    TB_ToLeftMove.Enabled :=Value;
    TB_ToRightMove.Enabled :=Value;
    TB_ToFront.Enabled :=Value;
    TB_ZoomOut.Enabled :=Value;
    TB_ZoomIN.Enabled :=Value;
    TB_RecZoom.Enabled :=Value;
    TB_imm_FirstStep.Enabled :=Value;
    TB_Imm_SecondStep.Enabled :=Value;
    TB_Old_FirstStep.Enabled :=Value;
    TB_Old_SecondStep.Enabled :=Value;
    TB_ToLO.Enabled :=Value;
    TB_SaveBMP.Enabled :=Value;
    TB_Tuli_1.Enabled :=Value;
    TB_NQ_step.Enabled :=Value;
    TB_Disp_ZCYL.Enabled :=Value;
    TB_Set_Parm.Enabled :=Value;
end;

procedure TUFormCdmn.SetDtFzJinJinChi(Value: double);
begin
        if Value>5 then   begin
           FormCdmn_inn.Leiji_Jinchi:=Value-5;
        end else begin
           FormCdmn_inn.Leiji_Jinchi:=0;
        end;

         self.Draw_Fyyd_DTFZ_new;
         FormCdmn_inn.StatusBar1.Panels[0].Text :='当前推进到：'+FormatFloat('0.00',FormCdmn_inn.Leiji_Jinchi+5)+'米';
end;

procedure TUFormCdmn.SetFromWidthAndHeigth(flag: integer);
begin
   if Flag=1  then  begin
       WindowState:= wsNormal;
       ShowScreen:=1;
       Show;
   end else begin
       ShowScreen:=0;
       WindowState:= wsMaximized;
       Show;
   end;
end;

procedure TUFormCdmn.Timer1Timer(Sender: TObject);
begin
         FormCdmn_inn.Leiji_Jinchi:=FormCdmn_inn.Leiji_Jinchi+FormCdmn_inn.Step_x;

         self.Draw_Fyyd_DTFZ_new;
         FormCdmn_inn.StatusBar1.Panels[0].Text :='当前推进到：'+FormatFloat('0.00',FormCdmn_inn.Leiji_Jinchi+5)+'米';

end;

procedure TUFormCdmn.ToolButton1Click(Sender: TObject);
begin
    Leiji_Jinchi:=0; X_move_Pix:=0;

    self.Draw_Fyyd_DTFZ_new;
    self.StatusBar1.Panels[0].Text :='当前推进到：'+FormatFloat('0.00',Leiji_Jinchi+5)+'米';
end;

procedure TUFormCdmn.TB_StepToStepClick(Sender: TObject);
begin
    Leiji_Jinchi:=Leiji_Jinchi+Step_x;
    if Leiji_Jinchi > ExPstopeClass.Ex_Gzm.S_L_qx* 3 then Leiji_Jinchi:=ExPstopeClass.Ex_Gzm.S_L_qx* 3;

    self.Draw_Fyyd_DTFZ_new;
    self.StatusBar1.Panels[0].Text :='当前推进到：'+FormatFloat('0.00',Leiji_Jinchi+5)+'米';
    // 新函数画法

end;

procedure TUFormCdmn.TB_imm_FirstStepClick(Sender: TObject);
begin
     Leiji_Jinchi:=ExPstopeClass.Ex_imm_r.Immroof_C0;
     ExPstopeClass.Ex_Cal_Show.setMoveStart(0);
     ExPstopeClass.Ex_Cal_Show.Zoom:=ExPstopeClass.GetZoom(
                      ExPstopeClass.Ex_Zk.Yc_Rock[ExPstopeClass.Ex_old.YL_start].Step0+
                      ExPstopeClass.Ex_Zk.Yc_Rock[ExPstopeClass.Ex_old.YL_start].step_i[1]-5);
     self.Draw_Fyyd_DTFZ_new;
     self.StatusBar1.Panels[0].Text :='当前推进到：'+FormatFloat('0.00',Leiji_Jinchi+5)+'米';
end;

procedure TUFormCdmn.TB_Imm_SecondStepClick(Sender: TObject);
begin
     Leiji_Jinchi:=ExPstopeClass.Ex_Zk.Yc_Rock[ExPstopeClass.Ex_imm_r.End_No].Step0-5+
                   ExPstopeClass.Ex_imm_r.Immroof_M*tan(25/180*3.14159)*2;
     ExPstopeClass.Ex_Cal_Show.setMoveStart(0);
     ExPstopeClass.Ex_Cal_Show.Zoom:=ExPstopeClass.GetZoom(Leiji_Jinchi);
     self.Draw_Fyyd_DTFZ_new;
     self.StatusBar1.Panels[0].Text :='当前推进到：'+FormatFloat('0.00',Leiji_Jinchi+5)+'米';
end;

procedure TUFormCdmn.TB_Old_FirstStepClick(Sender: TObject);
begin
     Leiji_Jinchi:=ExPstopeClass.Ex_Zk.Yc_Rock[ExPstopeClass.Ex_old.YL_start].Step0+
                      ExPstopeClass.Ex_Zk.Yc_Rock[ExPstopeClass.Ex_old.YL_start].step_i[1]-5;
     ExPstopeClass.Ex_Cal_Show.setMoveStart(0);
     ExPstopeClass.Ex_Cal_Show.Zoom:=ExPstopeClass.GetZoom(Leiji_Jinchi);
     self.Draw_Fyyd_DTFZ_new;
     self.StatusBar1.Panels[0].Text :='当前推进到：'+FormatFloat('0.00',Leiji_Jinchi+5)+'米';
end;

procedure TUFormCdmn.TB_Old_SecondStepClick(Sender: TObject);
begin
    Leiji_Jinchi:=ExPstopeClass.Ex_Zk.Yc_Rock[ExPstopeClass.Ex_old.YL_start].Step0+
                  ExPstopeClass.Ex_Zk.Yc_Rock[ExPstopeClass.Ex_old.YL_start].step_i[1]*3-5;
     ExPstopeClass.Ex_Cal_Show.setMoveStart(0);
     ExPstopeClass.Ex_Cal_Show.Zoom:=ExPstopeClass.GetZoom(Leiji_Jinchi);
     self.Draw_Fyyd_DTFZ_new;

     self.StatusBar1.Panels[0].Text :='当前推进到：'+FormatFloat('0.00',Leiji_Jinchi+5)+'米';
end;

procedure TUFormCdmn.TB_ToLOClick(Sender: TObject);
begin
     Leiji_Jinchi:=ExPstopeClass.Ex_Gzm.S_L_qx-5;
     X_move_Pix:=0;
     ExPstopeClass.Ex_Cal_Show.Zoom:=ExPstopeClass.GetZoom(Leiji_Jinchi);
     self.Draw_Fyyd_DTFZ_new;
     self.StatusBar1.Panels[0].Text :='当前推进到：'+FormatFloat('0.00',Leiji_Jinchi+5)+'米';
end;

procedure TUFormCdmn.TB_BackClick(Sender: TObject);
begin
     Leiji_Jinchi:=Leiji_Jinchi-Step_x;
     if Leiji_Jinchi< 0  then Leiji_Jinchi:=0;

     self.Draw_Fyyd_DTFZ_new;
     self.StatusBar1.Panels[0].Text :='当前推进到：'+FormatFloat('0.00',Leiji_Jinchi+5)+'米';
end;

procedure TUFormCdmn.TB_CloseClick(Sender: TObject);
begin
   Close;
end;

procedure TUFormCdmn.TB_ToFrontClick(Sender: TObject);
begin
   if disp_two_tu =0 then  begin
      disp_two_tu:=1;
      //TB_ToFront.Caption:='  倾斜方向'; {没有完成}
      TB_ToFront.Caption:='  推进方向';
   end else begin
      disp_two_tu:=0;
      TB_ToFront.Caption:='  推进方向';
   end;

      self.Draw_Fyyd_DTFZ_new;

end;

procedure TUFormCdmn.TB_Disp_ZCYLClick(Sender: TObject);
begin
    if disp_ylg =0 then  begin
      disp_ylg:=1;
      self.TB_Disp_ZCYL.Caption:='  隐压力拱';

   end else begin
      disp_ylg:=0;
      TB_Disp_ZCYL.Caption:='  显压力拱';
   end;

      self.Draw_Fyyd_DTFZ_new;
end;

procedure TUFormCdmn.TB_SaveBMPClick(Sender: TObject);
begin
     self.SavePictureDialog1.Execute();
//    if Public_Basic.Licensing  then  Public_Basic.AddSingleTextWater(FormCdmn_inn.Image_DCFZ)
//                 else Public_Basic.AddMultTextWater(FormCdmn_inn.Image_DCFZ);

     if trim(self.SavePictureDialog1.FileName)  <>'' then  begin
         if Public_Basic.Licensing  then  Public_Basic.AddSingleTextWaterFormImage(Image_DCFZ)
            else Public_Basic.AddMultTextWaterFormImage(Image_DCFZ);
          if SavePictureDialog1.FilterIndex =2 then  begin
             if ExtractFileExt(SavePictureDialog1.FileName) <> '.jpg' then
                 SavePictureDialog1.FileName := ChangeFileExt(SavePictureDialog1.FileName,'.jpg');
          end else if SavePictureDialog1.FilterIndex =3 then  begin
             if ExtractFileExt(SavePictureDialog1.FileName) <> '.png' then
                 SavePictureDialog1.FileName := ChangeFileExt(SavePictureDialog1.FileName,'.png');
          end else  begin
             if ExtractFileExt(SavePictureDialog1.FileName) <> '.bmp' then
                 SavePictureDialog1.FileName := ChangeFileExt(SavePictureDialog1.FileName,'.bmp');
          end;
          Image_DCFZ.Picture.SaveToFile(SavePictureDialog1.FileName);
     end;

end;

procedure TUFormCdmn.TB_RecZoomClick(Sender: TObject);
begin
     ExPstopeClass.Ex_Cal_Show.Zoom:=1;

    self.Draw_Fyyd_DTFZ_new;
end;

procedure TUFormCdmn.TB_ZoomOutClick(Sender: TObject);
begin
     ExPstopeClass.Ex_Cal_Show.Zoom:=ExPstopeClass.Ex_Cal_Show.Zoom*1.1;
     if ExPstopeClass.Ex_Cal_Show.Zoom >Zoom_max  then  ExPstopeClass.Ex_Cal_Show.Zoom:=Zoom_max;

     self.Draw_Fyyd_DTFZ_new;
end;

procedure TUFormCdmn.TB_ZoomINClick(Sender: TObject);
begin
    ExPstopeClass.Ex_Cal_Show.Zoom:=ExPstopeClass.Ex_Cal_Show.Zoom*0.9;
    if ExPstopeClass.Ex_Cal_Show.Zoom< Zoom_min then  ExPstopeClass.Ex_Cal_Show.Zoom:=Zoom_min;

   self.Draw_Fyyd_DTFZ_new;
end;

procedure TUFormCdmn.TB_ToLeftMoveClick(Sender: TObject);
begin
     X_move_Pix:=X_move_Pix+Trunc(self.Image_DCFZ.Width/15);

     self.Draw_Fyyd_DTFZ_new;

end;

procedure TUFormCdmn.TB_ToRightMoveClick(Sender: TObject);
begin
     X_move_Pix:=X_move_Pix-Trunc(self.Image_DCFZ.Width/15);
    self.Draw_Fyyd_DTFZ_new;
end;

procedure TUFormCdmn.TB_Set_ParmClick(Sender: TObject);
begin
     if Assigned(CheckForm) then  FreeAndNil(CheckForm);

     CheckForm:=TCheckForm.Create(nil);
     CheckForm.ParentWindow:=Handle;
     CheckForm.Top :=Round((self.Height-CheckForm.Height)/3);
     CheckForm.Left:=Round((self.Width -CheckForm.Width)/2);
     CheckForm.InitForm(Sender);
     CheckForm.Show;
end;

procedure TUFormCdmn.TB_AutoStepClick(Sender: TObject);
begin
       pause_Step:=not pause_Step;
       if not pause_Step then  begin
          Timer1.Enabled:=true;
          SetButtonEnabled(false);
          TB_AutoStep.Caption :='  暂停执行';
          Pop_AutoStep.Caption :='暂停执行';
       end else begin
          Timer1.Enabled:=False;
          SetButtonEnabled(true);
          TB_AutoStep.Caption :='  继续执行' ;
          Pop_AutoStep.Caption :='继续执行';
       end;

end;

procedure TUFormCdmn.TB_NQ_stepClick(Sender: TObject);
begin
    if NQ_step='1' then begin
         NQ_step:='0'; // 1 挠曲 算法  0 步距算法
         TB_NQ_step.Caption:='  挠曲算法';
         Pop_NaoQu.Caption :='挠曲算法';
    end else begin
         NQ_step:='1'; // 1 挠曲 算法  0 步距算法
         TB_NQ_step.Caption:='  步距算法';
         Pop_NaoQu.Caption :='步距算法';
    end;

     self.Draw_Fyyd_DTFZ_new;

end;

procedure TUFormCdmn.TB_Tuli_1Click(Sender: TObject);
begin
    if Tu_li=1 then  begin
        Tu_li :=0; // 1  仿真图例   0 简单图例
        TB_Tuli_1.Caption :='  仿真图例';
        Pop_tuli.Caption :='仿真图例';
    end  else begin
        Tu_li :=1; // 1  仿真图例   0 简单图例
        TB_Tuli_1.Caption :='  简约图例';
         Pop_tuli.Caption :='简约图例';
    end;

    self.Draw_Fyyd_DTFZ_new;

end;

end. // end Unit
